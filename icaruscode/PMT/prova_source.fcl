#include "singles.fcl"
#include "largeantmodules.fcl"
#include "detsimmodules.fcl"
#include "mccheatermodules.fcl"
#include "photpropservices.fcl"
#include "opticaldetectormodules.fcl"
#include "opticaldetectorservices.fcl"
#include "lightsource.fcl"
# #include "services_common_icarus.fcl"
#include "services_icarus_simulation.fcl"

process_name: ProvaSource

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "Source_histo.root" }
  TimeTracker:  {}
  RandomNumberGenerator: {} #ART native random number generator
                @table::icarus_g4_services
  OpDetResponse: @local::standard_opdetresponse
}

services.PhotonVisibilityService: @local::standard_photonvisibilityservice

services.SignalShapingServiceICARUS: @erase

services.LArG4Parameters.ReflectiveSurfaceNames: [
         "STEEL_STAINLESS_Fe7Cr2Ni"
      ]
services.LArG4Parameters.ReflectiveSurfaceReflectances: [
         [
            1.5e-8,
            1.5e-8,
            1.5e-8
         ]
      ]

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   1           # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: @local::standard_lightsource	  
   largeant:  @local::standard_largeant	  
 }

 analyzers:
 {
   pmtresponse: @local::standard_simphotoncounter
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant ] 
 analyzeIt:  [ pmtresponse ]
 #analyzeIt:  []
 #define the output stream, there could be more than one if using filters 
 stream1:  [out1]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [analyzeIt, stream1]  
  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "prova_source_icarus.root" #default file name, can override from command line with -o or --output
   saveMemoryObjectThreshold: 0
 }
}

# Begin optical specific parts:

#physics.producers.generator.SteeringFile:       "LightSourceSteering.txt"

#physics.producers.generator.T0: 0
#physics.producers.generator.SigmaT: 0.0
physics.producers.generator.N: 100000
#physics.producers.generator.FirstVoxel: 0
#physics.producers.generator.LastVoxel: -1
#physics.producers.generator.P: 9.7
#physics.producers.generator.SigmaP: 0.0

physics.producers.generator.UseCustomRegion: true

physics.producers.generator.XSteps: 1
physics.producers.generator.YSteps: 1
physics.producers.generator.ZSteps: 1
physics.producers.generator.RegionMin: [ -160 , -16 , 0 ]
physics.producers.generator.RegionMax: [ -159 , -15 , 1 ]


# set quantum efficiency supressed scint yield to 0.03 * 24000 
#services.DetectorPropertiesService.ScintYield: 72
#services.DetectorPropertiesService.ScintYield: 1440

# enable optical physics in LArG4
services.LArG4Parameters.EnabledPhysics: [ "Em",
                                                "Optical",
                                                "SynchrotronAndGN",
                                                "Ion",
                                                "Hadron",
                                                "Decay",
                                                "HadronElastic",
                                                "Stopping",
                                                "NeutronTrackingCut" ]

# enable this custom physics list
 services.LArG4Parameters.UseCustomPhysics: true

# do not allow lightsource to write output into root file
 physics.producers.generator.FillTree: true


physics.analyzers.pmtresponse.MakeAllPhotonsTree: true
physics.analyzers.pmtresponse.MakeDetectedPhotonsTree: true
physics.analyzers.pmtresponse.MakeSimPhotonssTree: true
physics.analyzers.pmtresponse.MakeEventsTree: true
