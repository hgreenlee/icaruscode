#include "services_common_icarus.fcl"
#include "decoderDefs.fcl"
#include "recowire_icarus.fcl"
#include "hitfindermodules_icarus.fcl"

process_name: decoder

services:
{
   TFileService:            { }
                             @table::icarus_calibration_services
                             @table::icarus_wirecalibration_services
}

#Look at the input files
source:
{
  module_type: RootInput
  fileNames:  [ "data.root" ]
  maxEvents:   -1       # Number of events to create
}

# Make sure to get rid of NuRandomSvc (not thread save)
services.NuRandomService: @erase

physics:
{
    // now also have something produce the digits and headers
    producers:
    {
        daq:         @local::decodeFilterNoise
        decon1droi:  @local::icarus_decon1droi
        gaushit:     @local::gaus_hitfinder_icarus
    }
  
    analyzers: {}
    my_producer_modules: [daq, decon1droi, gaushit]
    a: [rootout]
    end_paths: [a]
}

# turn off the sam metadata for testing
services.FileCatalogMetadata: {}

# Use this to setup the decoder module
physics.producers.daq.OutputPedestalCor:                                        true
physics.producers.daq.OutputCorrection:                                         true
physics.producers.daq.DecoderTool.CoherentGrouping:                             32
#physics.producers.daq.DecoderTool.FragmentIDVec:                                [ [4,0x1210], [5,0x1214], [14,0x1110], [15,0x1116], [16,0x1114], [17,0x1112] ]
physics.producers.daq.DecoderTool.FragmentIDVec:                                [ [14,0x1110], [15,0x1116], [16,0x1114], [17,0x1112] ]
#physics.producers.daq.DecoderTool.DiagnosticOutput:                             true  # This turns on lots of diagnostic messages... LOTS

# Setup for the 1D deconvolution
physics.producers.decon1droi.RawDigitLabelVec:                                [ "daq" ]

outputs: {
  rootout: {
    module_type: "RootOutput"
    fileName: "%ifb_%tc-%p.root"
    saveMemoryObjectThreshold: 0
  }
}

# Drop the artdaq format files on output
outputs.routout.outputCommands: ["keep *_*_*_*", "drop *_*_*_DAQ*" ]
